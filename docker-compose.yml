version: "3.7"

volumes:
  db:
    driver: local
  prometheus:
    driver: local
  grafana:
    driver: local

services:
  app:
    container_name: app
    build: .
    restart: always
    environment:
      - APP_DB_USER=postgres
      - APP_DB_PASSword=postgres
      - APP_DB_NAME=postgres
      - APP_DB_HOST=db
      - APP_DB_PORT=5432
    depends_on:
      - db
    ports:
      - "8081:8081"

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./config/db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql

  prometheus:
    image: prom/prometheus:v2.32.1
    user: root
    volumes:
      - "./config/prometheus/:/etc/prometheus"
      - "prometheus:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    user: root
    ports:
      - "3000:3000"
    volumes:
      - "grafana:/var/lib/grafana"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false